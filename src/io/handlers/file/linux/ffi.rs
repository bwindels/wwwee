//bindgen --with-derive-default --whitelist-function="io_getevents|io_setup|io_destroy|io_submit" --no-layout-tests --whitelist-var="IOCB_CMD_PREAD|IOCB_FLAG_RESFD" src/io/handlers/file/linux/aio.h
//rustfmt --force src/io/handlers/file/linux/ffi.rs

/* automatically generated by rust-bindgen */


#![allow(non_camel_case_types)]

pub const IOCB_FLAG_RESFD: ::std::os::raw::c_uint = 1;
pub type __s16 = ::std::os::raw::c_short;
pub type __u16 = ::std::os::raw::c_ushort;
pub type __u32 = ::std::os::raw::c_uint;
pub type __s64 = ::std::os::raw::c_longlong;
pub type __u64 = ::std::os::raw::c_ulonglong;
pub type __kernel_long_t = ::std::os::raw::c_long;
pub type __kernel_ulong_t = ::std::os::raw::c_ulong;
pub type __kernel_time_t = __kernel_long_t;
pub type __kernel_rwf_t = ::std::os::raw::c_int;
pub type aio_context_t = __kernel_ulong_t;
pub const IOCB_CMD_PREAD: _bindgen_ty_4 = 0;
pub const IOCB_CMD_PWRITE: _bindgen_ty_4 = 1;
pub const IOCB_CMD_FSYNC: _bindgen_ty_4 = 2;
pub const IOCB_CMD_FDSYNC: _bindgen_ty_4 = 3;
pub const IOCB_CMD_NOOP: _bindgen_ty_4 = 6;
pub const IOCB_CMD_PREADV: _bindgen_ty_4 = 7;
pub const IOCB_CMD_PWRITEV: _bindgen_ty_4 = 8;
pub type _bindgen_ty_4 = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct io_event {
    pub data: __u64,
    pub obj: __u64,
    pub res: __s64,
    pub res2: __s64,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct iocb {
    pub aio_data: __u64,
    pub aio_key: __u32,
    pub aio_rw_flags: __kernel_rwf_t,
    pub aio_lio_opcode: __u16,
    pub aio_reqprio: __s16,
    pub aio_fildes: __u32,
    pub aio_buf: __u64,
    pub aio_nbytes: __u64,
    pub aio_offset: __s64,
    pub aio_reserved2: __u64,
    pub aio_flags: __u32,
    pub aio_resfd: __u32,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone)]
pub struct timespec {
    pub tv_sec: __kernel_time_t,
    pub tv_nsec: ::std::os::raw::c_long,
}
extern "C" {
    pub fn io_setup(nr: ::std::os::raw::c_uint, ctxp: *mut aio_context_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn io_destroy(ctx: aio_context_t) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn io_submit(
        ctx: aio_context_t,
        nr: ::std::os::raw::c_long,
        iocbpp: *mut *mut iocb,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn io_getevents(
        ctx: aio_context_t,
        min_nr: ::std::os::raw::c_long,
        max_nr: ::std::os::raw::c_long,
        events: *mut io_event,
        timeout: *mut timespec,
    ) -> ::std::os::raw::c_int;
}
